{"version":3,"sources":["components/Searchbar/Searchbar.module.jsx","components/Searchbar/Searchbar.jsx","services/pixabay-api.js","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","App.js","index.js"],"names":["Header","styled","header","Form","form","Button","button","BtnLabel","span","Input","input","Searchbar","onSearch","onSubmit","e","preventDefault","target","elements","imageName","value","type","autoComplete","autoFocus","placeholder","name","axios","defaults","baseURL","fetchImages","page","a","get","response","data","hits","Item","li","Image","img","ImageGalleryItem","webformatURL","tags","onClick","src","alt","StyledGallery","div","ImageGallery","images","largeImage","map","image","largeImageURL","id","LoadMoreButton","Overlay","StyledModal","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","onClose","handleBackdropClick","currentTarget","window","addEventListener","this","removeEventListener","modalImage","createPortal","Component","LoaderThumb","Spinner","color","height","width","Status","App","state","reqStatus","showModal","handleFormSubmit","setState","loadMoreBtn","prevState","toggleModal","handleSelectedImage","prevProps","nextName","nextPage","scrollTo","top","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6e7cd5eb.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\r\n    0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }  \r\n`\r\n\r\nexport const BtnLabel = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`","import PropTypes from 'prop-types';\r\nimport { Header, Form, Button, BtnLabel, Input } from './Searchbar.module';\r\n\r\nconst Searchbar = ({ onSearch }) => {\r\n    const handleSearch = e => {\r\n        e.preventDefault();\r\n\r\n        onSearch(e.target.elements.imageName.value);\r\n    };     \r\n\r\n    return (\r\n        <Header>\r\n            <Form onSubmit={handleSearch} >\r\n                <Button type=\"submit\">\r\n                    <BtnLabel>Search</BtnLabel>\r\n                </Button>\r\n\r\n                <Input\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    name=\"imageName\"\r\n                />\r\n            </Form>\r\n        </Header>\r\n    );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSearch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nconst fetchImages = async (imageName, page) => {\n  const apiKey = '22568340-3d930d703d1ad37110880a9ab';\n  const params = 'image_type=photo&orientation=horizontal';\n\n  const response = await axios.get(\n    `?q=${imageName}&page=${page}&key=${apiKey}&${params}&per_page=12`,\n  );\n\n  return response.data.hits;\n};\n\nexport default fetchImages;\n\n// const BASE_URL = 'https://pixabay.com/api/';\n// const API_KEY = '22568340-3d930d703d1ad37110880a9ab';\n\n// function fetchImage(searchRequest, page) {\n//     return fetch(`${BASE_URL}?q=${searchRequest}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`).then(response => {\n//         if (response.ok) {\n//             return response.json();\n//         };\n\n//         return Promise.reject(new Error(`Нет фото с именем ${searchRequest}`));\n//     });\n// };\n\n// const api = {\n//   fetchImage,\n// };\n\n// export default api;\n","import styled from '@emotion/styled';\r\n\r\n\r\nexport const Item = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\r\n    0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`\r\n\r\n","import PropTypes from 'prop-types';\r\nimport { Item, Image } from './ImageGalleryItem.styled';\r\n\r\nexport default function ImageGalleryItem({ webformatURL, tags, onClick }) {\r\n    return (\r\n        <Item >\r\n            <Image src={webformatURL}\r\n                alt={tags}\r\n                onClick={onClick}\r\n            />\r\n        </Item>\r\n    );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StyledGallery = styled.div`\r\n display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledGallery } from './ImageGallery.styled';\r\n\r\nconst ImageGallery = ({ images, largeImage  }) => {\r\n  return (\r\n    <StyledGallery >\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          webformatURL={image.webformatURL}\r\n          largeImageURL={image.largeImageURL}\r\n          tags={image.tags}\r\n          onClick={() => largeImage(image)}               \r\n        />\r\n      ))}\r\n    </StyledGallery>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      tags: PropTypes.string,\r\n      webformatURL: PropTypes.string,\r\n      largeImageURL: PropTypes.string,\r\n    }),\r\n  ),\r\n  largeImage: PropTypes.func.isRequired, \r\n};\r\n\r\nexport default ImageGallery;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const LoadMoreButton = styled.button`\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),\r\n    0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #303f9f;\r\n  } \r\n`","import PropTypes from 'prop-types';\r\nimport { LoadMoreButton } from './Button.styled';\r\n\r\nfunction Button({ onClick }) {\r\n    return (\r\n      <LoadMoreButton\r\n        type=\"button\"\r\n        onClick={onClick}\r\n      >\r\n        Load more\r\n      </LoadMoreButton>\r\n    );\r\n} \r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n\r\n`\r\nexport const StyledModal = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { Overlay, StyledModal } from './Modal.styled';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { largeImageURL, tags } = this.props.modalImage;\r\n    // console.log(this.props.modalImage);\r\n\r\n    return createPortal(\r\n      <Overlay onClick={this.handleBackdropClick}>\r\n        <StyledModal>\r\n          <img\r\n            src={largeImageURL}\r\n            alt={tags}\r\n          />\r\n        </StyledModal>\r\n      </Overlay>,\r\n      modalRoot\r\n    );\r\n\r\n  };\r\n}\r\n\r\nexport default Modal;\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const LoaderThumb = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n`","import Loader from 'react-loader-spinner';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { LoaderThumb } from './Loader.styled';\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <LoaderThumb >\r\n      <Loader\r\n        type=\"Oval\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n      />\r\n    </LoaderThumb>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import { Component } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar.jsx';\nimport fetchImages from './services/pixabay-api';\nimport ImageGallery from './components/ImageGallery/ImageGallery.jsx';\nimport Button from './components/Button/Button.jsx';\nimport Modal from './components/Modal/Modal.jsx';\nimport Spinner from './components/Loader/Loader.jsx';\n\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default class App extends Component {\n  state = {\n    imageName: '',\n    images: [],\n    reqStatus: Status.IDLE,\n    page: 1,\n    showModal: false,\n    modalImage: null,\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    const nextName = this.state.imageName;\n    const nextPage = this.state.page;\n\n    if (prevState.imageName !== nextName || prevState.page !== nextPage) {\n      try {\n        this.setState({ reqStatus: Status.PENDING });\n        const images = await fetchImages(nextName, nextPage);\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          reqStatus: Status.RESOLVED,\n        }));\n        if (prevState.images !== this.state.images) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      } catch (error) {\n        this.setState({ reqStatus: Status.REJECTED });\n      }\n    }\n  }\n\n  handleFormSubmit = imageName => {\n    this.setState({ imageName });\n  };\n\n  loadMoreBtn = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  handleSelectedImage = largeImage => {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal,\n      modalImage: largeImage,\n    }));\n  };\n\n  render() {\n    const { images, showModal, modalImage, reqStatus } = this.state;\n\n    return (\n      <div>\n        <Searchbar onSearch={this.handleFormSubmit} />\n        {reqStatus === Status.PENDING && <Spinner />}\n        <ImageGallery\n          images={images}\n          toggleModal={this.toggleModal}\n          largeImage={this.handleSelectedImage}\n        />\n        {reqStatus === Status.RESOLVED && <Button onClick={this.loadMoreBtn} />}\n        {showModal && <Modal modalImage={modalImage} onClose={this.toggleModal} />}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}